name: TestCICDAzureApi-CICD

on:
  push:
    # Publish `test` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: cicddemoapi1

jobs:

  push:
    # Ensure test job passes before pushing image.
    # needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login bootestdeploycicd.azurecr.io -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}
        
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME


      - name: Push image
        env:
          TZ: Asia/Bangkok
        run: |
          IMAGE_ID=bootestdeploycicd.azurecr.io/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "production" ] && VERSION=latest
          NOW=$(date +'%Y-%m-%dT%H_%M_%S')
          echo $NOW

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          # docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:latest
          # docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:latest

          
          
          
